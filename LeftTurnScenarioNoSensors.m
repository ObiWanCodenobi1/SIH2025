function [scenario, egoVehicle] = LeftTurnScenarioNoSensors()
% createDrivingScenario Returns the drivingScenario defined in the Designer

% Generated by MATLAB(R) 9.10 (R2021a) and Automated Driving Toolbox 3.3 (R2021a).
% Generated on: 13-Dec-2020 21:42:43

% Construct a drivingScenario object.
scenario = drivingScenario('SampleTime', 0.04);

% Add all road segments
roadCenters = [150 24.2 0;
    54 24.2 0];
laneSpecification = lanespec([2 2]);
road(scenario, roadCenters, 'Lanes', laneSpecification, 'Name', 'Road');

roadCenters = [105 75 0;
    105 -20 0];
laneSpecification = lanespec([2 2]);
road(scenario, roadCenters, 'Lanes', laneSpecification, 'Name', 'Road1');

% Add the barriers
barrierCenters = [124.4 23.6 0;
    124.4 17.4 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [0.65 0.65 0.65], 'Name', 'Jersey Barrier');


% Add the ego vehicle
egoVehicle = vehicle(scenario, ...
    'ClassID', 1, ...
    'Position', [56 19 0], ...
    'Mesh', driving.scenario.carMesh, ...
    'Name', 'egoVehicle');
waypoints = [56 19 0;
    135 19 0];
speed = 10;
smoothTrajectory(egoVehicle, waypoints, speed);

% Add the non-ego actors
otherVehicle = vehicle(scenario, ...
    'ClassID', 1, ...
    'Position', [103 73 0], ...
    'Mesh', driving.scenario.carMesh, ...
    'Name', 'otherVehicle');

% Fixed start and end points (vehicle enters vertical road and turns left)
startPoint = [103 73 0];
endPoint   = [148.1 22.4 0];

% Number of random intermediate waypoints
numPoints = 3;  

% Generate evenly spaced X between start and end
xRand = linspace(startPoint(1), endPoint(1), numPoints+2);

% Road centerline is at y = 24.2
roadCenterY = 24.2;

% Random offsets limited to half road width (Â±7 m here, adjust if needed)
laneHalfWidth = 7;  
yRand = roadCenterY + (rand(1,numPoints+2)-0.5) * 2*laneHalfWidth;

% Ensure first and last Y match the fixed points
yRand(1) = startPoint(2);
yRand(end) = endPoint(2);

% Z is flat
zRand = zeros(1, numPoints+2);

% Combine into waypoints
waypoints = [xRand' yRand' zRand'];

% Define speed profile (constant speed)
speed = 10 * ones(size(waypoints,1),1);

% Smooth trajectory along the random road-following waypoints
smoothTrajectory(otherVehicle, waypoints, speed);
